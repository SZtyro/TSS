/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.9
 * Generated at: 2020-05-20 06:36:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import pl.data.DataLogic;
import pl.resources.Osoba;
import java.util.Map;
import java.util.ArrayList;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("pl.resources.Osoba");
    _jspx_imports_classes.add("pl.data.DataLogic");
    _jspx_imports_classes.add("java.util.Map");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1250\">\r\n");
      out.write("        <title>JSP Page</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("    <body bgcolor=\"#e0e0e0\">\r\n");
      out.write("\r\n");
      out.write("        <h1>Autor projektu: </h1>\r\n");
      out.write("        <p>Fabian Trubic</p>\r\n");
      out.write("\r\n");
      out.write("        <h1>Aktualna data: </h1>\r\n");
      out.write("        ");

            java.util.Date date = new java.util.Date();
            out.println("<p>" + date + "</p>");
            DataLogic logic = new DataLogic();
            java.sql.Connection connection = logic.connectDatabase();
            getServletContext().setAttribute("Connection", connection);

            try {
                String sQuery = "SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 't_uzytkownik'";
                java.sql.ResultSet wynikZapytania;
                wynikZapytania = connection.createStatement(java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE, java.sql.ResultSet.CONCUR_READ_ONLY).executeQuery(sQuery);
                wynikZapytania.first();

                out.println("<h5>");
                out.println("Dostepne kolumny: ");
                out.println("</h5>");
                out.println("<p>");
                
                for (int i = 0; i < wynikZapytania.getRow(); i++) {

                    out.println(" " + wynikZapytania.getString("COLUMN_NAME") +"," );

                    wynikZapytania.next();

                }
                out.println("</p>");
                
            } catch (Exception ex) {
                String sKomunikat = ex.toString();
                System.out.println(ex);
            }
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <table style=\"border: solid; width: 40%\" >\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>#</th>\r\n");
      out.write("                <th>Imie</th>\r\n");
      out.write("                <th>Nazwisko</th>\r\n");
      out.write("                <th>Opis</th>\r\n");
      out.write("                <th>Akcje</th>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tbody>\r\n");
      out.write("                ");

                    

                    try {
                        String sQuery = "SELECT * FROM t_uzytkownik";
                        java.sql.ResultSet wynikZapytania;
                        wynikZapytania = connection.createStatement(java.sql.ResultSet.TYPE_SCROLL_INSENSITIVE, java.sql.ResultSet.CONCUR_READ_ONLY).executeQuery(sQuery);
                        wynikZapytania.first();
                        
                        for (int i = 0; i < wynikZapytania.getRow(); i++) {
                            out.println("<tr>");
                            out.println("<td>" + wynikZapytania.getString("id") + "</td>");
                            out.println("<td>" + wynikZapytania.getString("imie") + "</td>");
                            out.println("<td>" + wynikZapytania.getString("nazwisko") + "</td>");
                            out.println("<td>" + wynikZapytania.getString("opis") + "</td>");
                            out.println("<td>"
                                    + "<form method=\"post\" action=\"DeleteServlet\">"
                                    + "<button style=\"background-color:#ff6347;border-radius:5px;border:none;\" name=\"Usun\" value=\"" + wynikZapytania.getString("id") + "\">Usun<input hidden type=\"submit\"></button>"
                                    + "</form>"
                                    + "</td>");
                            out.println("</tr>");
                            wynikZapytania.next();

                        }
                        
                    } catch (Exception ex) {
                        String sKomunikat = ex.toString();
                        System.out.println(ex);
                    }

                    

                
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </tbody>\r\n");
      out.write("        </table>\r\n");
      out.write("        <br>\r\n");
      out.write("        <form method=\"post\" action=\"mainServlet\">\r\n");
      out.write("            <input type=\"text\" name=\"Id\" value=\"Podaj id\">\r\n");
      out.write("            <input type=\"text\" name=\"Imie\" value=\"Podaj imie\">\r\n");
      out.write("            <input type=\"text\" name=\"Nazwisko\" value=\"Podaj nazwisko\">\r\n");
      out.write("            <input type=\"text\" name=\"Opis\" value=\"Podaj opis\">\r\n");
      out.write("            <input type=\"submit\" value=\"Dodaj osobe\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </body>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
